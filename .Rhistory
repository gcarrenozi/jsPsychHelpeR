gtsummary::inline_text(table_model, variable = SBS_DIRt))
table1 <- DF |>
# Convertir DEMOGR_genero_DIRd en factor con etiquetas claras
mutate(
DEMOGR_genero_DIRd = factor(
DEMOGR_genero_DIRd,
levels = c(0, 1, 2),
labels = c("Masculino", "Femenino", "No Binario") #actualiza los labels originales.
),
DEMOGR_edad_DIRd = as.numeric(DEMOGR_edad_DIRd)
) |>
dplyr::select(where(is.numeric), -id, DEMOGR_genero_DIRd, -Consent_DIRt, -DEMOGR_comuna_DIRd) |>
gtsummary::tbl_summary(
by = DEMOGR_genero_DIRd,  # Cambia las etiquetas  0, 1, 2 por su respectivo en género.
type = list(everything() ~ 'continuous'),
statistic = list(all_continuous() ~ "{mean} ± {sd}"),
digits = list(all_continuous() ~ 1),  #Con esto van los decimales
label = list(#actualiza los labels de la tabla.
DEMOGR_edad_DIRd ~ "Edad",
modify_caption("Tabla 1")
SBS_DIRt ~ "Puntaje SBS"
table1 <- DF |>
# Convertir DEMOGR_genero_DIRd en factor con etiquetas claras
mutate(
DEMOGR_genero_DIRd = factor(
DEMOGR_genero_DIRd,
levels = c(0, 1, 2),
labels = c("Masculino", "Femenino", "No Binario") #actualiza los labels originales.
),
DEMOGR_edad_DIRd = as.numeric(DEMOGR_edad_DIRd)
) |>
dplyr::select(where(is.numeric), -id, DEMOGR_genero_DIRd, -Consent_DIRt, -DEMOGR_comuna_DIRd) |>
gtsummary::tbl_summary(
by = DEMOGR_genero_DIRd,  # Cambia las etiquetas  0, 1, 2 por su respectivo en género.
type = list(everything() ~ 'continuous'),
statistic = list(all_continuous() ~ "{mean} ± {sd}"),
digits = list(all_continuous() ~ 1),  #Con esto van los decimales
label = list(#actualiza los labels de la tabla.
DEMOGR_edad_DIRd ~ "Edad",
modify_caption("Tabla 1")
SBS_DIRt ~ "Puntaje SBS"
# knitr::opts_chunk$set(echo = TRUE)
# DEBUG #DESCOMENTAR, CORRER Y VOLVER A COMENTAR.
# Makes sure all libraries and functions are available to work interactivelly
# targets::tar_load_globals() # Loads all libraries
# Loads DF_analysis
targets::tar_load(DF_analysis)
# In this document you will find a template to run analysis, plots, and tables
# You will need to adapt to the contents of your DF_analysis
# names(DF_analysis$DF_analysis) # Show variable names in DF_analysis
DF =
DF_analysis$DF_analysis %>%
# Update with your variable names
select(id, ends_with("_DIRd"), ends_with("_DIRt"))
# Continue your data preparation, if needed
#   filter() %>%
#   drop_na()
table1 <- DF |>
# Convertir DEMOGR_genero_DIRd en factor con etiquetas claras
mutate(
DEMOGR_genero_DIRd = factor(
DEMOGR_genero_DIRd,
levels = c(0, 1, 2),
labels = c("Masculino", "Femenino", "No Binario") #actualiza los labels originales.
),
DEMOGR_edad_DIRd = as.numeric(DEMOGR_edad_DIRd)
) |>
dplyr::select(where(is.numeric), -id, DEMOGR_genero_DIRd, -Consent_DIRt, -DEMOGR_comuna_DIRd) |>
gtsummary::tbl_summary(
by = DEMOGR_genero_DIRd,  # Cambia las etiquetas  0, 1, 2 por su respectivo en género.
type = list(everything() ~ 'continuous'),
statistic = list(all_continuous() ~ "{mean} ± {sd}"),
digits = list(all_continuous() ~ 1),  #Con esto van los decimales
label = list(#actualiza los labels de la tabla.
DEMOGR_edad_DIRd ~ "Edad",
modify_caption("Tabla 1")
SBS_DIRt ~ "Puntaje SBS"
table1 <- DF |>
# Convertir DEMOGR_genero_DIRd en factor con etiquetas claras
mutate(
DEMOGR_genero_DIRd = factor(
DEMOGR_genero_DIRd,
levels = c(0, 1, 2),
labels = c("Masculino", "Femenino", "No Binario") #actualiza los labels originales.
),
DEMOGR_edad_DIRd = as.numeric(DEMOGR_edad_DIRd)
) |>
dplyr::select(where(is.numeric), -id, DEMOGR_genero_DIRd, -Consent_DIRt, -DEMOGR_comuna_DIRd) |>
gtsummary::tbl_summary(
by = DEMOGR_genero_DIRd,  # Cambia las etiquetas  0, 1, 2 por su respectivo en género.
type = list(everything() ~ 'continuous'),
statistic = list(all_continuous() ~ "{mean} ± {sd}"),
digits = list(all_continuous() ~ 1),  #Con esto van los decimales
label = list(#actualiza los labels de la tabla.
DEMOGR_edad_DIRd ~ "Edad",
modify_caption("Tabla 1"),
SBS_DIRt ~ "Puntaje SBS"
)
)
table1 <- DF |>
# Convertir DEMOGR_genero_DIRd en factor con etiquetas claras
mutate(
DEMOGR_genero_DIRd = factor(
DEMOGR_genero_DIRd,
levels = c(0, 1, 2),
labels = c("Masculino", "Femenino", "No Binario") #actualiza los labels originales.
),
DEMOGR_edad_DIRd = as.numeric(DEMOGR_edad_DIRd)
) |>
dplyr::select(where(is.numeric), -id, DEMOGR_genero_DIRd, -Consent_DIRt, -DEMOGR_comuna_DIRd) |>
gtsummary::tbl_summary(
by = DEMOGR_genero_DIRd,  # Cambia las etiquetas  0, 1, 2 por su respectivo en género.
type = list(everything() ~ 'continuous'),
statistic = list(all_continuous() ~ "{mean} ± {sd}"),
digits = list(all_continuous() ~ 1),  #Con esto van los decimales
label = list(#actualiza los labels de la tabla.
DEMOGR_edad_DIRd ~ "Edad",
SBS_DIRt ~ "Puntaje SBS"
),
modify_caption("Tabla 1")
)
table1 <- DF |>
# Convertir DEMOGR_genero_DIRd en factor con etiquetas claras
mutate(
DEMOGR_genero_DIRd = factor(
DEMOGR_genero_DIRd,
levels = c(0, 1, 2),
labels = c("Masculino", "Femenino", "No Binario") #actualiza los labels originales.
),
DEMOGR_edad_DIRd = as.numeric(DEMOGR_edad_DIRd)
) |>
dplyr::select(where(is.numeric), -id, DEMOGR_genero_DIRd, -Consent_DIRt, -DEMOGR_comuna_DIRd) |>
gtsummary::tbl_summary(
by = DEMOGR_genero_DIRd,  # Cambia las etiquetas  0, 1, 2 por su respectivo en género.
type = list(everything() ~ 'continuous'),
statistic = list(all_continuous() ~ "{mean} ± {sd}"),
digits = list(all_continuous() ~ 1),  #Con esto van los decimales
label = list(#actualiza los labels de la tabla.
DEMOGR_edad_DIRd ~ "Edad",
SBS_DIRt ~ "Puntaje SBS"
)
)
table1
#NUEVA TABLA:
table1 <- DF |>
# Convertir DEMOGR_genero_DIRd en factor con etiquetas claras
mutate(
DEMOGR_genero_DIRd = factor(
DEMOGR_genero_DIRd,
levels = c(0, 1, 2),
modify_caption("Tabla 1"),
labels = c("Masculino", "Femenino", "No Binario"), #actualiza los labels originales.
),
DEMOGR_edad_DIRd = as.numeric(DEMOGR_edad_DIRd)
) |>
dplyr::select(where(is.numeric), -id, DEMOGR_genero_DIRd, -Consent_DIRt, -DEMOGR_comuna_DIRd) |>
gtsummary::tbl_summary(
by = DEMOGR_genero_DIRd,  # Cambia las etiquetas  0, 1, 2 por su respectivo en género.
type = list(everything() ~ 'continuous'),
statistic = list(all_continuous() ~ "{mean} ± {sd}"),
digits = list(all_continuous() ~ 1),  #Con esto van los decimales
label = list(#actualiza los labels de la tabla.
DEMOGR_edad_DIRd ~ "Edad",
SBS_DIRt ~ "Puntaje SBS"
)
)
table1 <- DF |>
# Convertir DEMOGR_genero_DIRd en factor con etiquetas claras
mutate(
DEMOGR_genero_DIRd = factor(
DEMOGR_genero_DIRd,
levels = c(0, 1, 2),
labels = c("Masculino", "Femenino", "No Binario"), #actualiza los labels originales.
),
DEMOGR_edad_DIRd = as.numeric(DEMOGR_edad_DIRd)
) |>
dplyr::select(where(is.numeric), -id, DEMOGR_genero_DIRd, -Consent_DIRt, -DEMOGR_comuna_DIRd) |>
gtsummary::tbl_summary(
by = DEMOGR_genero_DIRd,  # Cambia las etiquetas  0, 1, 2 por su respectivo en género.
type = list(everything() ~ 'continuous'),
statistic = list(all_continuous() ~ "{mean} ± {sd}"),
digits = list(all_continuous() ~ 1),  #Con esto van los decimales
label = list(#actualiza los labels de la tabla.
DEMOGR_edad_DIRd ~ "Edad",
SBS_DIRt ~ "Puntaje SBS"
)
)
table1
#NUEVA TABLA:
table1 <- DF |>
# Convertir DEMOGR_genero_DIRd en factor con etiquetas claras
mutate(
DEMOGR_genero_DIRd = factor(
DEMOGR_genero_DIRd,
levels = c(0, 1, 2),
labels = c("Masculino", "Femenino", "No Binario"), #actualiza los labels originales.
),
DEMOGR_edad_DIRd = as.numeric(DEMOGR_edad_DIRd)
) |>
dplyr::select(where(is.numeric), -id, DEMOGR_genero_DIRd, -Consent_DIRt, -DEMOGR_comuna_DIRd) |>
gtsummary::tbl_summary(
by = DEMOGR_genero_DIRd,  # Cambia las etiquetas  0, 1, 2 por su respectivo en género.
type = list(everything() ~ 'continuous'),
statistic = list(all_continuous() ~ "{mean} ± {sd}"),
digits = list(all_continuous() ~ 1),  #Con esto van los decimales
label = list(#actualiza los labels de la tabla.
DEMOGR_edad_DIRd ~ "Edad",
SBS_DIRt ~ "Puntaje SBS"
)
) |>
modify_caption("Tabla 1")
table1
# Remember to change the variables in your plot
# plot1 =
#   DF %>%
#   ggplot(aes(SBS_DIRt, DEMOGR_genero_DIRd)) +
#   geom_jitter() +
#   geom_smooth(method = "lm")
#
# plot1
ggplot(DF, aes(DEMOGR_genero_DIRd, SBS_DIRt)) +
geom_violin(alpha = .2, aes(fill = DEMOGR_genero_DIRd), draw_quantiles = .5) +
geom_jitter(alpha = .1, height = 0, width = .2)+
scale_fill_discrete(
name = "Género",
labels = c("Masculino", "Femenino", "No binario")
)+
xlab("Género")+
ylab("Puntaje SBS")+
theme(axis.text.x = element_blank())
# Remember to change the variables in your plot
# plot1 =
#   DF %>%
#   ggplot(aes(SBS_DIRt, DEMOGR_genero_DIRd)) +
#   geom_jitter() +
#   geom_smooth(method = "lm")
#
# plot1
ggplot(DF, aes(DEMOGR_genero_DIRd, SBS_DIRt)) +
geom_violin(alpha = .2, aes(fill = DEMOGR_genero_DIRd), draw_quantiles = .5) +
geom_jitter(alpha = .1, height = 0, width = .2)+
scale_fill_discrete(
name = "Género",
labels = c("Masculino", "Femenino", "No binario")
)+
xlab("Género")+
ylab("Puntaje SBS")+
labs(title = "Figura 1")+
theme(axis.text.x = element_blank())
# Remember to change the variables used in your model and inline_text
attr(DF$SBS_DIRt, "label") <- "Puntaje SBS" #Con esto renombro para la tabla el label SBS_DIRt con Puntaje SBS
model1 = lm(DEMOGR_edad_DIRd ~ SBS_DIRt, DF)
table_model = gtsummary::tbl_regression(model1, intercept = TRUE) %>%
# add_global_p() %>%
bold_labels() %>%
italicize_levels() %>%
modify_caption("Tabla 2") %>%
add_glance_table(include = c("nobs", "df.residual", "r.squared", "adj.r.squared"))
table_model
# report::report(model1)
paste0("IRI was not a significant predictor of EAR",
", beta = ",
gtsummary::inline_text(table_model, variable = SBS_DIRt))
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
# Remember to change the variables used in your model and inline_text
attr(DF$SBS_DIRt, "label") <- "Puntaje SBS" #Con esto renombro para la tabla el label SBS_DIRt con Puntaje SBS
model1 = lm(DEMOGR_edad_DIRd ~ SBS_DIRt, DF)
table_model = gtsummary::tbl_regression(model1, intercept = TRUE) %>%
# add_global_p() %>%
bold_labels() %>%
italicize_levels() %>%
modify_caption("Tabla 2") %>%
add_glance_table(include = c("nobs", "df.residual", "r.squared", "adj.r.squared"))
table_model
report::report(model1)
paste0("IRI was not a significant predictor of EAR",
", beta = ",
gtsummary::inline_text(table_model, variable = SBS_DIRt))
# Remember to change the variables used in your model and inline_text
attr(DF$SBS_DIRt, "label") <- "Puntaje SBS" #Con esto renombro para la tabla el label SBS_DIRt con Puntaje SBS
model1 = lm(DEMOGR_edad_DIRd ~ SBS_DIRt, DF)
table_model = gtsummary::tbl_regression(model1, intercept = TRUE) %>%
# add_global_p() %>%
bold_labels() %>%
italicize_levels() %>%
modify_caption("Tabla 2") %>%
add_glance_table(include = c("nobs", "df.residual", "r.squared", "adj.r.squared"))
table_model
# report::report(model1)
paste0("IRI was not a significant predictor of EAR",
", beta = ",
gtsummary::inline_text(table_model, variable = "Puntaje SBS))
# Remember to change the variables used in your model and inline_text
attr(DF$SBS_DIRt, "label") <- "Puntaje SBS" #Con esto renombro para la tabla el label SBS_DIRt con Puntaje SBS
# Remember to change the variables used in your model and inline_text
attr(DF$SBS_DIRt, "label") <- "Puntaje SBS" #Con esto renombro para la tabla el label SBS_DIRt con Puntaje SBS
model1 = lm(DEMOGR_edad_DIRd ~ SBS_DIRt, DF)
table_model = gtsummary::tbl_regression(model1, intercept = TRUE) %>%
# add_global_p() %>%
bold_labels() %>%
italicize_levels() %>%
modify_caption("Tabla 2") %>%
add_glance_table(include = c("nobs", "df.residual", "r.squared", "adj.r.squared"))
table_model
# report::report(model1)
paste0("IRI was not a significant predictor of EAR",
", beta = ",
gtsummary::inline_text(table_model, variable = SBS_DIRt))
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
# Remember to change the variables used in your model and inline_text
attr(DF$SBS_DIRt, "label") <- "Puntaje SBS" #Con esto renombro para la tabla el label SBS_DIRt con Puntaje SBS
model1 = lm(DEMOGR_edad_DIRd ~ SBS_DIRt, DF)
table_model = gtsummary::tbl_regression(model1, intercept = TRUE) %>%
# add_global_p() %>%
bold_labels() %>%
italicize_levels() %>%
modify_caption("Tabla 2") %>%
add_glance_table(include = c("nobs", "df.residual", "r.squared", "adj.r.squared"))
table_model
# report::report(model1)
paste0("El puntaje SBS no fue un buen predictor para la Edad",
", beta = ",
gtsummary::inline_text(table_model, variable = SBS_DIRt))
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
# Remember to change the variables used in your model and inline_text
attr(DF$SBS_DIRt, "label") <- "Puntaje SBS" #Con esto renombro para la tabla el label SBS_DIRt con Puntaje SBS
model1 = lm(DEMOGR_edad_DIRd ~ SBS_DIRt, DF)
table_model = gtsummary::tbl_regression(model1, intercept = TRUE) %>%
# add_global_p() %>%
bold_labels() %>%
italicize_levels() %>%
modify_caption("Tabla 2") %>%
add_glance_table(include = c("nobs", "df.residual", "r.squared", "adj.r.squared")%>%
paste0(El puntaje SBS no fue un buen predictor para la Edad,
# Remember to change the variables used in your model and inline_text
attr(DF$SBS_DIRt, "label") <- "Puntaje SBS" #Con esto renombro para la tabla el label SBS_DIRt con Puntaje SBS
model1 = lm(DEMOGR_edad_DIRd ~ SBS_DIRt, DF)
table_model = gtsummary::tbl_regression(model1, intercept = TRUE) %>%
# add_global_p() %>%
bold_labels() %>%
italicize_levels() %>%
modify_caption("Tabla 2") %>%
add_glance_table(include = c("nobs", "df.residual", "r.squared", "adj.r.squared")
)
table_model
# report::report(model1)
paste0(El puntaje SBS no fue un buen predictor para la Edad,
# Remember to change the variables used in your model and inline_text
attr(DF$SBS_DIRt, "label") <- "Puntaje SBS" #Con esto renombro para la tabla el label SBS_DIRt con Puntaje SBS
model1 = lm(DEMOGR_edad_DIRd ~ SBS_DIRt, DF)
table_model = gtsummary::tbl_regression(model1, intercept = TRUE) %>%
# add_global_p() %>%
bold_labels() %>%
italicize_levels() %>%
modify_caption("Tabla 2") %>%
add_glance_table(include = c("nobs", "df.residual", "r.squared", "adj.r.squared")
)
table_model
# report::report(model1)
paste0("El puntaje SBS no fue un buen predictor para la Edad",
", beta = ",
gtsummary::inline_text(table_model, variable = SBS_DIRt))
# Remember to change the variables used in your model and inline_text
attr(DF$SBS_DIRt, "label") <- "Puntaje SBS" #Con esto renombro para la tabla el label SBS_DIRt con Puntaje SBS
model1 = lm(DEMOGR_edad_DIRd ~ SBS_DIRt, DF)
table_model = gtsummary::tbl_regression(model1, intercept = TRUE) %>%
# add_global_p() %>%
bold_labels() %>%
italicize_levels() %>%
modify_caption("Tabla 2") %>%
add_glance_table(include = c("nobs", "df.residual", "r.squared", "adj.r.squared")
)
table_model
# report::report(model1)
cat("\n", texto, "\n") #Genero un "enter"
# Remember to change the variables used in your model and inline_text
attr(DF$SBS_DIRt, "label") <- "Puntaje SBS" #Con esto renombro para la tabla el label SBS_DIRt con Puntaje SBS
model1 = lm(DEMOGR_edad_DIRd ~ SBS_DIRt, DF)
table_model = gtsummary::tbl_regression(model1, intercept = TRUE) %>%
# add_global_p() %>%
bold_labels() %>%
italicize_levels() %>%
modify_caption("Tabla 2") %>%
add_glance_table(include = c("nobs", "df.residual", "r.squared", "adj.r.squared")
)
table_model
# report::report(model1)
texto <- paste0(
"El puntaje SBS no fue un buen predictor para la Edad, ",
"beta = ",
gtsummary::inline_text(table_model, variable = SBS_DIRt)
)
cat("\n", texto, "\n") #Genero un "enter"
# paste0("El puntaje SBS no fue un buen predictor para la Edad",
#        ", beta = ",
#        gtsummary::inline_text(table_model, variable = SBS_DIRt))
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
# Remember to change the variables used in your model and inline_text
attr(DF$SBS_DIRt, "label") <- "Puntaje SBS" #Con esto renombro para la tabla el label SBS_DIRt con Puntaje SBS
model1 = lm(DEMOGR_edad_DIRd ~ SBS_DIRt, DF)
table_model = gtsummary::tbl_regression(model1, intercept = TRUE) %>%
# add_global_p() %>%
bold_labels() %>%
italicize_levels() %>%
modify_caption("Tabla 2") %>%
add_glance_table(include = c("nobs", "df.residual", "r.squared", "adj.r.squared")
)
table_model
# report::report(model1)
texto <- paste0(
"El puntaje SBS no fue un buen predictor para la Edad, ",
"beta = ",
gtsummary::inline_text(table_model, variable = SBS_DIRt)
)
cat("\n", texto, "\n") #Genero un "enter"
writeLines(c("", texto, ""))
# paste0("El puntaje SBS no fue un buen predictor para la Edad",
#        ", beta = ",
#        gtsummary::inline_text(table_model, variable = SBS_DIRt))
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
# report::report(model1)
texto <- paste0(
"Considerando lo anteiror, el puntaje SBS no fue un buen predictor para la Edad, ",
"beta = ",
gtsummary::inline_text(table_model, variable = SBS_DIRt)
)
#cat("\n", texto, "\n") #Genero un "enter"
writeLines(c("","", texto, ""))
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
# Remember to change the variables used in your model and inline_text
attr(DF$SBS_DIRt, "label") <- "Puntaje SBS" #Con esto renombro para la tabla el label SBS_DIRt con Puntaje SBS
model1 = lm(DEMOGR_edad_DIRd ~ SBS_DIRt, DF)
table_model = gtsummary::tbl_regression(model1, intercept = TRUE) %>%
# add_global_p() %>%
bold_labels() %>%
italicize_levels() %>%
modify_caption("Tabla 2") %>%
add_glance_table(include = c("nobs", "df.residual", "r.squared", "adj.r.squared")
)
table_model
cat("\n\n\n\n\n") #genero cinco "enter"
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
# report::report(model1)
texto <- paste0(
"Considerando lo anterior, el puntaje SBS no fue un buen predictor para la Edad, ",
"beta = ",
gtsummary::inline_text(table_model, variable = SBS_DIRt)
)
#cat("\n", texto, "\n") #Genero un "enter"
writeLines(c("", texto, ""))
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
save.image("~/Desktop/Gabriel_Tareas/PROTOCOLOP_TAREA/Tarea_Gorka/Envio.RData")
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
# Run pipeline -------------------------------------------------------------
###LA UNICA LINEA QUE HAY QUE CORRER ES LA 11.TAR_MAKE
# Run data preparation
targets::tar_make()
